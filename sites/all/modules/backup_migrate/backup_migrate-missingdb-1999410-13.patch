diff --git a/includes/destinations.db.inc b/includes/destinations.db.inc
index d683403..27d947b 100644
--- a/includes/destinations.db.inc
+++ b/includes/destinations.db.inc
@@ -213,12 +213,7 @@ class backup_migrate_destination_db extends backup_migrate_destination_remote {
         }
       }
       if ($target && $key) {
-        try {
         $this->connection = Database::getConnection($target, $key);
-        }
-        catch (PDOException $e) {
-          return NULL;
-        }
       }
     }
     return $this->connection;
diff --git a/includes/destinations.db.mysql.inc b/includes/destinations.db.mysql.inc
index ffde3f5..019da7b 100644
--- a/includes/destinations.db.mysql.inc
+++ b/includes/destinations.db.mysql.inc
@@ -51,22 +51,19 @@ class backup_migrate_destination_db_mysql extends backup_migrate_destination_db
         if ($info['driver'] === 'mysql') {
           $url = $info['driver'] . '://' . $info['username'] . ':' . $info['password'] . '@' . $info['host'] . (isset($info['port']) ? ':' . $info['port'] : '') . '/' . $info['database'];
           if ($destination = backup_migrate_create_destination('mysql', array('url' => $url))) {
-            // Make sure the connection is valid.
-            if ($destination->_get_db_connection()) {
-              // Treat the default database differently because it is probably the only one available.
-              if ($key == 'default:default') {
-                $destination->set_id('db');
-                $destination->set_name(t('Default Database'));
-                // Dissalow backing up to the default database because that's confusing and potentially dangerous.
-                $destination->remove_op('scheduled backup');
-                $destination->remove_op('manual backup');
-              }
-              else {
-                $destination->set_id('db:'. $key);
-                $destination->set_name($key .": ". $destination->get_display_location());
-              }
-              $out[$destination->get_id()] = $destination;              
-            } 
+            // Treat the default database differently because it is probably the only one available.
+            if ($key == 'default:default') {
+              $destination->set_id('db');
+              $destination->set_name(t('Default Database'));
+              // Dissalow backing up to the default database because that's confusing and potentially dangerous.
+              $destination->remove_op('scheduled backup');
+              $destination->remove_op('manual backup');
+            }
+            else {
+              $destination->set_id('db:'. $key);
+              $destination->set_name($key .": ". $destination->get_display_location());
+            }
+            $out[$destination->get_id()] = $destination;
           }
         }
       }
@@ -367,10 +364,9 @@ class backup_migrate_destination_db_mysql extends backup_migrate_destination_db
    */
   function _get_db_connection() {
     if (!$this->connection) {
-      if ($this->connection = parent::_get_db_connection()) {
-        // Set the sql mode because the default is ANSI,TRADITIONAL which is not aware of collation or storage engine.
-        $this->connection->exec("SET sql_mode=''");        
-      }
+      $this->connection = parent::_get_db_connection();
+      // Set the sql mode because the default is ANSI,TRADITIONAL which is not aware of collation or storage engine.
+      $this->connection->exec("SET sql_mode=''");
     }
     return $this->connection;
   }
